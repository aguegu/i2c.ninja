import{k as A,_ as M,a as j,b as G,e as P,c as J,f as K,g as L,h as X,i as q,s as Q,d as W}from"./utils-Dax9hThb.js";import"./lodash-B4X47Vf9.js";import{T as Y,r,U as S,z as Z,P as C,V as ee,A as te,C as y,D as t,O as ae,B as h,J as a,F as u,G as _,K as I,M as ne}from"./index-CPfc8qSv.js";import{_ as se}from"./Space-BaYJkXh7.js";class oe{constructor(s){this.adapter=s,this.address="40"}async init(){return this.adapter.transmit(`AT+TX=${this.address}FE`)}async measure(){const s=await this.adapter.transmit(`AT+TR=${this.address}e303`),o=((s.readUInt16BE()*17572>>16)-4685)/100,l=await this.adapter.transmit(`AT+TR=${this.address}e503`),d=(l.readUInt16BE()*125>>16)-6;if(A(s.slice(0,2),49,0)!==s.readUInt8(2)||A(l.slice(0,2),49,0)!==l.readUInt8(2))throw new Error("checksum not match");return Promise.resolve({temperature:o,humidity:d})}}const le={style:{position:"relative",height:"60vh"}},ie={name:"DeviceSht20"},pe=Object.assign(ie,{setup(D){const{t:s}=Y({useScope:"global"}),o=r(!1),l=r(null),d=r(null),m=r(200),v=r(null),g=r("40"),U=S("emitter"),{transmit:c,connect:B}=S("adapter");let f=null,n=null,w=Date.now();const b=async()=>{try{({humidity:d.value,temperature:l.value}=await f.measure());const e=Date.now();n.data.datasets[0].data.push({x:e,y:l.value}),n.data.datasets[1].data.push({x:e,y:d.value}),e>w+100&&(w=e,C().then(()=>{n.options.scales.x.min=Q(new Date,{minutes:1});const i=n.data.datasets[1].data.findLastIndex(p=>p.x<n.options.scales.x.min);n.data.datasets[0].data.splice(0,i),n.data.datasets[1].data.splice(0,i),n.update()})),o.value&&(await W(m.value),b())}catch(e){console.log(e),o.value=!1}},H=async()=>{await B(),await c("AT"),await c("AT");const e=await c("AT+SC");if(!Array.from(e).includes(parseInt(g.value,16)))throw U.emit("message",{type:"error",data:{message:"Not Found"}}),new Error(`SHT20 at adrress 0x${g.value} NOT Found`);f=new oe({transmit:c}),await f.init(),o.value=!0,b()};return Z(()=>{console.log("onMounted"),C().then(()=>{n=new ee(v.value,{type:"line",data:{datasets:[{label:s("measurement.Temperature"),fill:!1,data:[],yAxisID:"yT"},{label:s("measurement.Humidity"),fill:!1,data:[],yAxisID:"yH"}]},options:{spanGaps:!0,responsive:!0,maintainAspectRatio:!1,parsing:!1,normalized:!0,animations:{numbers:{properties:["x"],type:"number",from:void 0}},scales:{x:{type:"time",ticks:{stepSize:5},time:{unit:"second"}},yT:{title:{display:!0,text:"°C"},ticks:{stepSize:1,precision:1}},yH:{title:{display:!0,text:"%"},ticks:{stepSize:10,precision:0},position:"right",grid:{drawOnChartArea:!1}}}}})})}),te(()=>{n.destroy()}),(e,i)=>{const p=j,z=G,E=P,F=J,N=K,T=ne,R=se,x=L,$=X,O=q,V=ae;return h(),y(V,null,{header:t(()=>[a(z,null,{default:t(()=>[a(p,null,{default:t(()=>[u(_(e.$t("header.Ambient"))+_(e.$t("adapter.Sensor")),1)]),_:1}),a(p,null,{default:t(()=>[u("SHT20")]),_:1})]),_:1})]),"header-extra":t(()=>[a(R,null,{default:t(()=>[a(N,{"label-placement":"left",inline:""},{default:t(()=>[a(F,{label:`${e.$t("adapter.Interval")} (ms)`,style:{width:"300px"}},{default:t(()=>[a(E,{value:m.value,"onUpdate:value":i[0]||(i[0]=k=>m.value=k),step:100,min:0,max:5e3},null,8,["value"])]),_:1},8,["label"])]),_:1}),a(M),o.value?(h(),y(T,{key:0,onClick:i[1]||(i[1]=k=>{o.value=!1}),type:"warning"},{default:t(()=>[u(_(e.$t("adapter.Stop")),1)]),_:1})):(h(),y(T,{key:1,onClick:H,type:"primary"},{default:t(()=>[u(_(e.$t("adapter.Start")),1)]),_:1}))]),_:1})]),default:t(()=>[a(O,{"x-gap":"12",cols:2},{default:t(()=>[a($,null,{default:t(()=>[a(x,{label:e.$t("measurement.Temperature"),value:l.value},{suffix:t(()=>[u("°C")]),_:1},8,["label","value"])]),_:1}),a($,null,{default:t(()=>[a(x,{label:e.$t("measurement.Humidity"),value:d.value},{suffix:t(()=>[u("%")]),_:1},8,["label","value"])]),_:1})]),_:1}),I("div",le,[I("canvas",{ref_key:"chartRef",ref:v},null,512)])]),_:1})}}});export{pe as default};
